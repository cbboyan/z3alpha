(set-logic UF)
(declare-sort $$unsorted 0)
(declare-fun tptp.v1_xxreal_0 ($$unsorted) Bool)
(declare-fun tptp.k1_numbers () $$unsorted)
(declare-fun tptp.r2_hidden ($$unsorted $$unsorted) Bool)
(declare-fun tptp.k1_xxreal_0 () $$unsorted)
(declare-fun tptp.r1_xxreal_0 ($$unsorted $$unsorted) Bool)
(assert (not (forall ((A $$unsorted)) (=> (tptp.v1_xxreal_0 A) (not (and (tptp.r2_hidden A tptp.k1_numbers) (tptp.r1_xxreal_0 tptp.k1_xxreal_0 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (not (tptp.r2_hidden B A))))))
(declare-fun tptp.v6_ordinal1 ($$unsorted) Bool)
(declare-fun tptp.k1_zfmisc_1 ($$unsorted) $$unsorted)
(declare-fun tptp.m1_subset_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v6_ordinal1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v6_ordinal1 B))))))
(declare-fun tptp.v3_ordinal1 ($$unsorted) Bool)
(declare-fun tptp.v1_ordinal1 ($$unsorted) Bool)
(declare-fun tptp.v2_ordinal1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v3_ordinal1 A) (and (tptp.v1_ordinal1 A) (tptp.v2_ordinal1 A)))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v1_ordinal1 A) (tptp.v2_ordinal1 A)) (tptp.v3_ordinal1 A))))
(declare-fun tptp.v1_xboole_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v3_ordinal1 A))))
(declare-fun tptp.v5_ordinal1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v5_ordinal1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v3_ordinal1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v3_ordinal1 B))))))
(declare-fun tptp.v7_ordinal1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v3_ordinal1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v7_ordinal1 A))))
(declare-fun tptp.k4_ordinal1 () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k4_ordinal1) (tptp.v7_ordinal1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v6_ordinal1 A))))
(declare-fun tptp.k2_tarski ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k2_tarski A B) (tptp.k2_tarski B A)))))
(declare-fun tptp.k2_xboole_0 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k2_xboole_0 A B) (tptp.k2_xboole_0 B A)))))
(declare-fun tptp.k2_arytm_2 () $$unsorted)
(declare-fun tptp.r1_arytm_2 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.m1_subset_1 A tptp.k2_arytm_2) (tptp.m1_subset_1 B tptp.k2_arytm_2)) (or (tptp.r1_arytm_2 A B) (tptp.r1_arytm_2 B A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xxreal_0 A) (tptp.v1_xxreal_0 B)) (or (tptp.r1_xxreal_0 A B) (tptp.r1_xxreal_0 B A))))))
(declare-fun tptp.k1_xboole_0 () $$unsorted)
(declare-fun tptp.k1_tarski ($$unsorted) $$unsorted)
(declare-fun tptp.k2_zfmisc_1 ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k4_tarski ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k6_subset_1 ($$unsorted $$unsorted) $$unsorted)
(assert (= tptp.k1_numbers (tptp.k6_subset_1 (tptp.k2_xboole_0 tptp.k2_arytm_2 (tptp.k2_zfmisc_1 (tptp.k1_tarski tptp.k1_xboole_0) tptp.k2_arytm_2)) (tptp.k1_tarski (tptp.k4_tarski tptp.k1_xboole_0 tptp.k1_xboole_0)))))
(declare-fun tptp.o_0_0_xboole_0 () $$unsorted)
(assert (= tptp.k1_xboole_0 tptp.o_0_0_xboole_0))
(assert (= tptp.k1_xxreal_0 tptp.k1_numbers))
(declare-fun tptp.k6_numbers () $$unsorted)
(declare-fun tptp.k2_xxreal_0 () $$unsorted)
(assert (= tptp.k2_xxreal_0 (tptp.k4_tarski tptp.k6_numbers tptp.k1_numbers)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k4_tarski A B) (tptp.k2_tarski (tptp.k2_tarski A B) (tptp.k1_tarski A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xxreal_0 A) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k2_zfmisc_1 (tptp.k1_tarski tptp.k6_numbers) tptp.k2_arytm_2))) (let ((_let_2 (tptp.r2_hidden A _let_1))) (let ((_let_3 (tptp.r2_hidden B tptp.k2_arytm_2))) (let ((_let_4 (tptp.r1_xxreal_0 A B))) (let ((_let_5 (and _let_2 (tptp.r2_hidden B _let_1)))) (let ((_let_6 (and (tptp.r2_hidden A tptp.k2_arytm_2) _let_3))) (=> (tptp.v1_xxreal_0 B) (and (=> _let_6 (= _let_4 (exists ((C $$unsorted)) (and (tptp.m1_subset_1 C tptp.k2_arytm_2) (exists ((D $$unsorted)) (and (tptp.m1_subset_1 D tptp.k2_arytm_2) (= A C) (= B D) (tptp.r1_arytm_2 C D))))))) (=> _let_5 (= _let_4 (exists ((C $$unsorted)) (and (tptp.m1_subset_1 C tptp.k2_arytm_2) (exists ((D $$unsorted)) (and (tptp.m1_subset_1 D tptp.k2_arytm_2) (= A (tptp.k4_tarski tptp.k6_numbers C)) (= B (tptp.k4_tarski tptp.k6_numbers D)) (tptp.r1_arytm_2 D C))))))) (not (and (not _let_6) (not _let_5) (not (= _let_4 (not (and (not (and _let_3 _let_2)) (not (= A tptp.k2_xxreal_0)) (not (= B tptp.k1_xxreal_0))))))))))))))))))))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(declare-fun tptp.k5_numbers () $$unsorted)
(assert (tptp.m1_subset_1 tptp.k5_numbers (tptp.k1_zfmisc_1 tptp.k1_numbers)))
(declare-fun tptp.m2_subset_1 ($$unsorted $$unsorted $$unsorted) Bool)
(assert (tptp.m2_subset_1 tptp.k6_numbers tptp.k1_numbers tptp.k5_numbers))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.m1_subset_1 (tptp.k6_subset_1 A B) (tptp.k1_zfmisc_1 A)))))
(assert true)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (=> (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C A)))))))
(assert (tptp.v1_xboole_0 tptp.o_0_0_xboole_0))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (tptp.m1_subset_1 B A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (exists ((C $$unsorted)) (tptp.m2_subset_1 C A B))))))
(assert (not (tptp.v1_xboole_0 tptp.k1_numbers)))
(assert (tptp.v1_xboole_0 tptp.k1_xboole_0))
(assert (tptp.v1_xxreal_0 tptp.k1_xxreal_0))
(assert (forall ((A $$unsorted)) (not (tptp.v1_xboole_0 (tptp.k1_tarski A)))))
(assert (tptp.v1_xxreal_0 tptp.k2_xxreal_0))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (tptp.v1_xboole_0 (tptp.k2_tarski A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 (tptp.k2_xboole_0 A B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 (tptp.k2_xboole_0 B A)))))))
(assert (and (not (tptp.v1_xboole_0 tptp.k4_ordinal1)) (tptp.v3_ordinal1 tptp.k4_ordinal1)))
(declare-fun tptp.v1_finset_1 ($$unsorted) Bool)
(assert (not (tptp.v1_finset_1 tptp.k1_numbers)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k2_xboole_0 A A) A))))
(assert (not (tptp.r2_hidden tptp.k1_xxreal_0 tptp.k2_arytm_2)))
(assert (not (tptp.r2_hidden tptp.k1_xxreal_0 (tptp.k2_zfmisc_1 (tptp.k1_tarski tptp.k6_numbers) tptp.k2_arytm_2))))
(assert (exists ((A $$unsorted)) (tptp.v3_ordinal1 A)))
(assert (exists ((A $$unsorted)) (tptp.v1_xboole_0 A)))
(assert (exists ((A $$unsorted)) (tptp.v1_xxreal_0 A)))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v1_ordinal1 A) (tptp.v2_ordinal1 A) (tptp.v3_ordinal1 A))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_xboole_0 A))))
(assert (exists ((A $$unsorted)) (tptp.v7_ordinal1 A)))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v7_ordinal1 A))))
(assert (= tptp.k5_numbers tptp.k4_ordinal1))
(assert (= tptp.k6_numbers tptp.k1_xboole_0))
(declare-fun tptp.k4_xboole_0 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k6_subset_1 A B) (tptp.k4_xboole_0 A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (= (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C B)))))))
(declare-fun tptp.r1_tarski ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.r1_tarski A A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xxreal_0 A) (tptp.v1_xxreal_0 B)) (tptp.r1_xxreal_0 A A)))))
(assert (forall ((A $$unsorted)) (= (tptp.k2_xboole_0 A tptp.k1_xboole_0) A)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (tptp.m1_subset_1 A B)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xxreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xxreal_0 B) (=> (and (tptp.r1_xxreal_0 A B) (tptp.r1_xxreal_0 B A)) (= A B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 A B) (or (tptp.v1_xboole_0 B) (tptp.r2_hidden A B))))))
(assert (forall ((A $$unsorted)) (= (tptp.k4_xboole_0 A tptp.k1_xboole_0) A)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 B)) (tptp.r1_tarski A B)))))
(assert (forall ((A $$unsorted)) (= (tptp.k4_xboole_0 tptp.k1_xboole_0 A) tptp.k1_xboole_0)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C))) (tptp.m1_subset_1 A C))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C)) (tptp.v1_xboole_0 C)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (= A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.v1_xboole_0 A) (not (= A B)) (tptp.v1_xboole_0 B))))))
(set-info :filename t9_xxreal_0)
(check-sat-assuming ( true ))
