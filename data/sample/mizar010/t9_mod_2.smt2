(set-logic UF)
(declare-sort $$unsorted 0)
(declare-fun tptp.v2_struct_0 ($$unsorted) Bool)
(declare-fun tptp.v13_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v3_group_1 ($$unsorted) Bool)
(declare-fun tptp.v4_vectsp_1 ($$unsorted) Bool)
(declare-fun tptp.v5_vectsp_1 ($$unsorted) Bool)
(declare-fun tptp.v2_rlvect_1 ($$unsorted) Bool)
(declare-fun tptp.v3_rlvect_1 ($$unsorted) Bool)
(declare-fun tptp.v4_rlvect_1 ($$unsorted) Bool)
(declare-fun tptp.l6_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v3_mod_2 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.l1_mod_2 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v8_vectsp_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v9_vectsp_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v10_vectsp_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v11_vectsp_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.l1_vectsp_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.m1_mod_2 ($$unsorted $$unsorted $$unsorted $$unsorted) Bool)
(assert (not (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A)) (forall ((B $$unsorted)) (=> (and (tptp.v3_mod_2 B A) (tptp.l1_mod_2 B A)) (exists ((C $$unsorted)) (and (not (tptp.v2_struct_0 C)) (tptp.v13_algstr_0 C) (tptp.v8_vectsp_1 C A) (tptp.v9_vectsp_1 C A) (tptp.v10_vectsp_1 C A) (tptp.v11_vectsp_1 C A) (tptp.v2_rlvect_1 C) (tptp.v3_rlvect_1 C) (tptp.v4_rlvect_1 C) (tptp.l1_vectsp_1 C A) (exists ((D $$unsorted)) (and (not (tptp.v2_struct_0 D)) (tptp.v13_algstr_0 D) (tptp.v8_vectsp_1 D A) (tptp.v9_vectsp_1 D A) (tptp.v10_vectsp_1 D A) (tptp.v11_vectsp_1 D A) (tptp.v2_rlvect_1 D) (tptp.v3_rlvect_1 D) (tptp.v4_rlvect_1 D) (tptp.l1_vectsp_1 D A) (tptp.m1_mod_2 B A C D)))))))))))
(declare-fun tptp.r2_hidden ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (not (tptp.r2_hidden B A))))))
(declare-fun tptp.l1_struct_0 ($$unsorted) Bool)
(declare-fun tptp.v7_struct_0 ($$unsorted) Bool)
(declare-fun tptp.np__1 () $$unsorted)
(declare-fun tptp.v13_struct_0 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A)) (tptp.v13_struct_0 A tptp.np__1)))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.np__1) (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(declare-fun tptp.l2_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v4_algstr_1 ($$unsorted) Bool)
(declare-fun tptp.v5_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v6_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v2_algstr_1 ($$unsorted) Bool)
(declare-fun tptp.v3_algstr_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l2_algstr_0 A) (=> (and _let_1 (tptp.v4_algstr_1 A)) (and _let_1 (tptp.v5_algstr_0 A) (tptp.v6_algstr_0 A) (tptp.v2_algstr_1 A) (tptp.v3_algstr_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v7_struct_0 A)))))
(declare-fun tptp.v1_xboole_0 ($$unsorted) Bool)
(declare-fun tptp.k1_zfmisc_1 ($$unsorted) $$unsorted)
(declare-fun tptp.m1_subset_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_xboole_0 B))))))
(declare-fun tptp.v1_vectsp_1 ($$unsorted) Bool)
(declare-fun tptp.v2_vectsp_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l6_algstr_0 A) (=> (and _let_1 (tptp.v5_vectsp_1 A)) (and _let_1 (tptp.v1_vectsp_1 A) (tptp.v2_vectsp_1 A)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l2_algstr_0 A) (=> (and _let_1 (tptp.v5_algstr_0 A) (tptp.v6_algstr_0 A) (tptp.v2_algstr_1 A) (tptp.v3_algstr_1 A)) (and _let_1 (tptp.v4_algstr_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(declare-fun tptp.v1_subset_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (not (tptp.v1_subset_1 B A)) (not (tptp.v1_xboole_0 B))))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l6_algstr_0 A) (=> (and _let_1 (tptp.v1_vectsp_1 A) (tptp.v2_vectsp_1 A)) (and _let_1 (tptp.v5_vectsp_1 A)))))))
(declare-fun tptp.l1_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v7_algstr_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_algstr_0 A) (=> (and (tptp.v5_algstr_0 A) (tptp.v6_algstr_0 A)) (tptp.v7_algstr_0 A)))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l2_algstr_0 A) (=> (and _let_1 (tptp.v4_algstr_1 A)) (and _let_1 (tptp.v2_algstr_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (tptp.v1_xboole_0 B) (tptp.v1_subset_1 B A)))))))
(declare-fun tptp.l4_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v3_vectsp_1 ($$unsorted) Bool)
(declare-fun tptp.v6_vectsp_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l4_algstr_0 A) (=> (and _let_1 (tptp.v4_vectsp_1 A)) (and _let_1 (tptp.v3_vectsp_1 A) (tptp.v6_vectsp_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_algstr_0 A) (=> (tptp.v7_algstr_0 A) (and (tptp.v5_algstr_0 A) (tptp.v6_algstr_0 A))))))
(declare-fun tptp.v1_algstr_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l2_algstr_0 A) (=> (and _let_1 (tptp.v13_algstr_0 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A)) (and _let_1 (tptp.v1_algstr_1 A) (tptp.v4_algstr_1 A)))))))
(declare-fun tptp.v8_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v2_struct_0 A))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and _let_1 (tptp.v8_struct_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_subset_1 B A)))))))
(declare-fun tptp.v1_group_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l4_algstr_0 A) (=> (and _let_1 (tptp.v3_vectsp_1 A) (tptp.v6_vectsp_1 A)) (and _let_1 (tptp.v1_group_1 A)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v8_struct_0 A)))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and (not (tptp.v2_struct_0 A)) _let_1))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l4_algstr_0 A) (=> (and _let_1 (tptp.v4_vectsp_1 A)) (and _let_1 (tptp.v1_group_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v7_struct_0 A) (tptp.v8_struct_0 A)))))
(declare-fun tptp.v5_group_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l4_algstr_0 A) (=> (and _let_1 (tptp.v5_group_1 A) (tptp.v6_vectsp_1 A)) (and _let_1 (tptp.v3_vectsp_1 A)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v13_struct_0 A tptp.np__1))) (=> (tptp.l2_algstr_0 A) (=> _let_1 (and _let_1 (tptp.v13_algstr_0 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v8_struct_0 A)) (not (tptp.v7_struct_0 A))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l6_algstr_0 A) (=> (and _let_1 (tptp.v7_struct_0 A)) (and _let_1 (tptp.v1_vectsp_1 A) (tptp.v4_vectsp_1 A)))))))
(declare-fun tptp.k1_xboole_0 () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v13_struct_0 A tptp.k1_xboole_0)))))
(declare-fun tptp.l3_algstr_0 ($$unsorted) Bool)
(declare-fun tptp.v2_group_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v13_struct_0 A tptp.np__1))) (=> (tptp.l3_algstr_0 A) (=> _let_1 (and _let_1 (tptp.v2_group_1 A) (tptp.v3_group_1 A) (tptp.v5_group_1 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.k1_xboole_0) (tptp.v2_struct_0 A)))))
(declare-fun tptp.u1_mod_2 ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k2_mod_2 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A)) (forall ((B $$unsorted)) (=> (tptp.l1_mod_2 B A) (= (tptp.k2_mod_2 A B) (tptp.u1_mod_2 A B)))))))
(declare-fun tptp.u2_mod_2 ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k3_mod_2 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A)) (forall ((B $$unsorted)) (=> (tptp.l1_mod_2 B A) (= (tptp.k3_mod_2 A B) (tptp.u2_mod_2 A B)))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A)) (forall ((B $$unsorted)) (=> (and (not (tptp.v2_struct_0 B)) (tptp.v13_algstr_0 B) (tptp.v8_vectsp_1 B A) (tptp.v9_vectsp_1 B A) (tptp.v10_vectsp_1 B A) (tptp.v11_vectsp_1 B A) (tptp.v2_rlvect_1 B) (tptp.v3_rlvect_1 B) (tptp.v4_rlvect_1 B) (tptp.l1_vectsp_1 B A)) (forall ((C $$unsorted)) (=> (and (not (tptp.v2_struct_0 C)) (tptp.v13_algstr_0 C) (tptp.v8_vectsp_1 C A) (tptp.v9_vectsp_1 C A) (tptp.v10_vectsp_1 C A) (tptp.v11_vectsp_1 C A) (tptp.v2_rlvect_1 C) (tptp.v3_rlvect_1 C) (tptp.v4_rlvect_1 C) (tptp.l1_vectsp_1 C A)) (forall ((D $$unsorted)) (=> (and (tptp.v3_mod_2 D A) (tptp.l1_mod_2 D A)) (= (tptp.m1_mod_2 D A B C) (and (= (tptp.k2_mod_2 A D) B) (= (tptp.k3_mod_2 A D) C))))))))))))
(assert true)
(assert true)
(assert true)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k2_mod_2 A B))) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (tptp.l1_mod_2 B A)) (and (not (tptp.v2_struct_0 _let_1)) (tptp.v13_algstr_0 _let_1) (tptp.v8_vectsp_1 _let_1 A) (tptp.v9_vectsp_1 _let_1 A) (tptp.v10_vectsp_1 _let_1 A) (tptp.v11_vectsp_1 _let_1 A) (tptp.v2_rlvect_1 _let_1) (tptp.v3_rlvect_1 _let_1) (tptp.v4_rlvect_1 _let_1) (tptp.l1_vectsp_1 _let_1 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k3_mod_2 A B))) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (tptp.l1_mod_2 B A)) (and (not (tptp.v2_struct_0 _let_1)) (tptp.v13_algstr_0 _let_1) (tptp.v8_vectsp_1 _let_1 A) (tptp.v9_vectsp_1 _let_1 A) (tptp.v10_vectsp_1 _let_1 A) (tptp.v11_vectsp_1 _let_1 A) (tptp.v2_rlvect_1 _let_1) (tptp.v3_rlvect_1 _let_1) (tptp.v4_rlvect_1 _let_1) (tptp.l1_vectsp_1 _let_1 A)))))))
(assert true)
(declare-fun tptp.k5_numbers () $$unsorted)
(declare-fun tptp.k1_numbers () $$unsorted)
(assert (tptp.m1_subset_1 tptp.k5_numbers (tptp.k1_zfmisc_1 tptp.k1_numbers)))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_algstr_0 A) (tptp.l1_struct_0 A))))
(assert true)
(assert true)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (forall ((B $$unsorted)) (=> (tptp.l1_vectsp_1 B A) (tptp.l2_algstr_0 B))))))
(declare-fun tptp.l2_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l2_algstr_0 A) (and (tptp.l2_struct_0 A) (tptp.l1_algstr_0 A)))))
(assert (forall ((A $$unsorted)) (=> (tptp.l2_struct_0 A) (tptp.l1_struct_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.l3_algstr_0 A) (tptp.l1_struct_0 A))))
(declare-fun tptp.l3_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l3_struct_0 A) (tptp.l1_struct_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.l4_algstr_0 A) (and (tptp.l3_struct_0 A) (tptp.l3_algstr_0 A)))))
(declare-fun tptp.l4_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l4_struct_0 A) (and (tptp.l2_struct_0 A) (tptp.l3_struct_0 A)))))
(declare-fun tptp.l5_algstr_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l5_algstr_0 A) (and (tptp.l4_algstr_0 A) (tptp.l4_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (tptp.l6_algstr_0 A) (and (tptp.l2_algstr_0 A) (tptp.l5_algstr_0 A)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (not (tptp.v2_struct_0 B)) (tptp.v13_algstr_0 B) (tptp.v8_vectsp_1 B A) (tptp.v9_vectsp_1 B A) (tptp.v10_vectsp_1 B A) (tptp.v11_vectsp_1 B A) (tptp.v2_rlvect_1 B) (tptp.v3_rlvect_1 B) (tptp.v4_rlvect_1 B) (tptp.l1_vectsp_1 B A) (not (tptp.v2_struct_0 C)) (tptp.v13_algstr_0 C) (tptp.v8_vectsp_1 C A) (tptp.v9_vectsp_1 C A) (tptp.v10_vectsp_1 C A) (tptp.v11_vectsp_1 C A) (tptp.v2_rlvect_1 C) (tptp.v3_rlvect_1 C) (tptp.v4_rlvect_1 C) (tptp.l1_vectsp_1 C A)) (forall ((D $$unsorted)) (=> (tptp.m1_mod_2 D A B C) (and (tptp.v3_mod_2 D A) (tptp.l1_mod_2 D A)))))))))
(assert true)
(declare-fun tptp.m2_subset_1 ($$unsorted $$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (=> (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u1_mod_2 A B))) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (tptp.l1_mod_2 B A)) (and (not (tptp.v2_struct_0 _let_1)) (tptp.v13_algstr_0 _let_1) (tptp.v8_vectsp_1 _let_1 A) (tptp.v9_vectsp_1 _let_1 A) (tptp.v10_vectsp_1 _let_1 A) (tptp.v11_vectsp_1 _let_1 A) (tptp.v2_rlvect_1 _let_1) (tptp.v3_rlvect_1 _let_1) (tptp.v4_rlvect_1 _let_1) (tptp.l1_vectsp_1 _let_1 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u2_mod_2 A B))) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (tptp.l1_mod_2 B A)) (and (not (tptp.v2_struct_0 _let_1)) (tptp.v13_algstr_0 _let_1) (tptp.v8_vectsp_1 _let_1 A) (tptp.v9_vectsp_1 _let_1 A) (tptp.v10_vectsp_1 _let_1 A) (tptp.v11_vectsp_1 _let_1 A) (tptp.v2_rlvect_1 _let_1) (tptp.v3_rlvect_1 _let_1) (tptp.v4_rlvect_1 _let_1) (tptp.l1_vectsp_1 _let_1 A)))))))
(assert (exists ((A $$unsorted)) (tptp.l1_algstr_0 A)))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A)) (exists ((B $$unsorted)) (tptp.l1_mod_2 B A)))))
(assert (exists ((A $$unsorted)) (tptp.l1_struct_0 A)))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (exists ((B $$unsorted)) (tptp.l1_vectsp_1 B A)))))
(assert (exists ((A $$unsorted)) (tptp.l2_algstr_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l2_struct_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l3_algstr_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l3_struct_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l4_algstr_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l4_struct_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l5_algstr_0 A)))
(assert (exists ((A $$unsorted)) (tptp.l6_algstr_0 A)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v13_algstr_0 A) (tptp.v3_group_1 A) (tptp.v4_vectsp_1 A) (tptp.v5_vectsp_1 A) (tptp.v2_rlvect_1 A) (tptp.v3_rlvect_1 A) (tptp.v4_rlvect_1 A) (tptp.l6_algstr_0 A) (not (tptp.v2_struct_0 B)) (tptp.v13_algstr_0 B) (tptp.v8_vectsp_1 B A) (tptp.v9_vectsp_1 B A) (tptp.v10_vectsp_1 B A) (tptp.v11_vectsp_1 B A) (tptp.v2_rlvect_1 B) (tptp.v3_rlvect_1 B) (tptp.v4_rlvect_1 B) (tptp.l1_vectsp_1 B A) (not (tptp.v2_struct_0 C)) (tptp.v13_algstr_0 C) (tptp.v8_vectsp_1 C A) (tptp.v9_vectsp_1 C A) (tptp.v10_vectsp_1 C A) (tptp.v11_vectsp_1 C A) (tptp.v2_rlvect_1 C) (tptp.v3_rlvect_1 C) (tptp.v4_rlvect_1 C) (tptp.l1_vectsp_1 C A)) (exists ((D $$unsorted)) (tptp.m1_mod_2 D A B C)))))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (tptp.m1_subset_1 B A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (exists ((C $$unsorted)) (tptp.m2_subset_1 C A B))))))
(assert (forall ((A $$unsorted)) (not (tptp.v1_xboole_0 (tptp.k1_zfmisc_1 A)))))
(assert (tptp.v1_xboole_0 tptp.k1_xboole_0))
(assert (exists ((A $$unsorted)) (and (tptp.l4_algstr_0 A) (not (tptp.v2_struct_0 A)) (tptp.v4_vectsp_1 A))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_xboole_0 B)))))))
(assert (exists ((A $$unsorted)) (tptp.v1_xboole_0 A)))
(assert (exists ((A $$unsorted)) (and (tptp.l2_struct_0 A) (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_xboole_0 B)))))
(assert (exists ((A $$unsorted)) (and (tptp.l5_algstr_0 A) (not (tptp.v2_struct_0 A)) (tptp.v4_vectsp_1 A))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_xboole_0 A))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_subset_1 B A))))))
(assert (exists ((A $$unsorted)) (and (tptp.l3_algstr_0 A) (not (tptp.v2_struct_0 A)) (tptp.v3_group_1 A) (tptp.v5_group_1 A))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_subset_1 B A))))))
(assert (exists ((A $$unsorted)) (and (tptp.l4_algstr_0 A) (not (tptp.v2_struct_0 A)) (tptp.v1_group_1 A) (tptp.v3_group_1 A) (tptp.v5_group_1 A))))
(declare-fun tptp.k4_ordinal1 () $$unsorted)
(assert (= tptp.k5_numbers tptp.k4_ordinal1))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (= (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C B)))))))
(declare-fun tptp.r1_tarski ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.r1_tarski A A))))
(assert (not (tptp.v1_xboole_0 tptp.np__1)))
(declare-fun tptp.v2_xxreal_0 ($$unsorted) Bool)
(assert (and (tptp.v2_xxreal_0 tptp.np__1) (tptp.m2_subset_1 tptp.np__1 tptp.k1_numbers tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__1 tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__1 tptp.k1_numbers)))
(assert (tptp.m1_subset_1 tptp.k1_xboole_0 tptp.k4_ordinal1))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (tptp.m1_subset_1 A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 A B) (or (tptp.v1_xboole_0 B) (tptp.r2_hidden A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 B)) (tptp.r1_tarski A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C))) (tptp.m1_subset_1 A C))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C)) (tptp.v1_xboole_0 C)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (= A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.v1_xboole_0 A) (not (= A B)) (tptp.v1_xboole_0 B))))))
(set-info :filename t9_mod_2)
(check-sat-assuming ( true ))
