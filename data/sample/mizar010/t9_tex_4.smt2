(set-logic UF)
(declare-sort $$unsorted 0)
(declare-fun tptp.v2_struct_0 ($$unsorted) Bool)
(declare-fun tptp.l1_pre_topc ($$unsorted) Bool)
(declare-fun tptp.u1_struct_0 ($$unsorted) $$unsorted)
(declare-fun tptp.k1_zfmisc_1 ($$unsorted) $$unsorted)
(declare-fun tptp.m1_subset_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v2_tex_4 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.k6_setfam_1 ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.v1_tex_4 ($$unsorted $$unsorted) Bool)
(assert (not (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_pre_topc A)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.k1_zfmisc_1 _let_1))) (=> (tptp.v2_tex_4 B A) (tptp.v1_tex_4 (tptp.k6_setfam_1 _let_1 B) A)))))))))
(declare-fun tptp.r2_hidden ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (not (tptp.r2_hidden B A))))))
(declare-fun tptp.l1_struct_0 ($$unsorted) Bool)
(declare-fun tptp.v7_struct_0 ($$unsorted) Bool)
(declare-fun tptp.np__1 () $$unsorted)
(declare-fun tptp.v13_struct_0 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A)) (tptp.v13_struct_0 A tptp.np__1)))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.np__1) (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v7_struct_0 A)))))
(declare-fun tptp.v1_xboole_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_xboole_0 B))))))
(declare-fun tptp.v1_zfmisc_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v1_zfmisc_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(declare-fun tptp.v1_subset_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (not (tptp.v1_subset_1 B A)) (not (tptp.v1_xboole_0 B))))))))
(declare-fun tptp.v2_tops_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_pre_topc A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (=> (tptp.v1_xboole_0 B) (tptp.v2_tops_1 B A)))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (not (tptp.v1_xboole_0 A)))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (tptp.v1_xboole_0 B) (tptp.v1_subset_1 B A)))))))
(declare-fun tptp.v8_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v2_struct_0 A))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and _let_1 (tptp.v8_struct_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_subset_1 B A)))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (forall ((B $$unsorted)) (let ((_let_1 (not (tptp.v1_xboole_0 B)))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (and _let_1 (tptp.v1_zfmisc_1 B)) (and _let_1 (tptp.v1_subset_1 B A)))))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v8_struct_0 A)))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and (not (tptp.v2_struct_0 A)) _let_1))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_zfmisc_1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_zfmisc_1 B))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (forall ((B $$unsorted)) (let ((_let_1 (not (tptp.v1_xboole_0 B)))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (=> (and _let_1 (not (tptp.v1_subset_1 B A))) (and _let_1 (not (tptp.v1_zfmisc_1 B))))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v7_struct_0 A) (tptp.v8_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v13_struct_0 A tptp.np__1) (tptp.l1_struct_0 A)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (not (tptp.v1_xboole_0 B)))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (=> _let_2 (and _let_2 (not (tptp.v1_subset_1 B _let_1)))))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v8_struct_0 A)) (not (tptp.v7_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v13_struct_0 A tptp.np__1) (tptp.l1_struct_0 A)) (forall ((B $$unsorted)) (let ((_let_1 (not (tptp.v1_xboole_0 B)))) (let ((_let_2 (tptp.u1_struct_0 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_2)) (=> (and _let_1 (not (tptp.v1_subset_1 B _let_2))) (and _let_1 (tptp.v1_zfmisc_1 B))))))))))
(declare-fun tptp.k1_xboole_0 () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v13_struct_0 A tptp.k1_xboole_0)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (not (tptp.v1_xboole_0 B)))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (=> (and _let_2 (tptp.v1_zfmisc_1 B)) (and _let_2 (tptp.v1_subset_1 B _let_1))))))))))
(declare-fun tptp.v6_pre_topc ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_pre_topc A) (=> (tptp.v2_struct_0 A) (tptp.v6_pre_topc A)))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.k1_xboole_0) (tptp.v2_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (forall ((B $$unsorted)) (let ((_let_1 (not (tptp.v1_xboole_0 B)))) (let ((_let_2 (tptp.u1_struct_0 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_2)) (=> (and _let_1 (not (tptp.v1_subset_1 B _let_2))) (and _let_1 (not (tptp.v1_zfmisc_1 B)))))))))))
(declare-fun tptp.o_0_0_xboole_0 () $$unsorted)
(assert (= tptp.k1_xboole_0 tptp.o_0_0_xboole_0))
(assert true)
(assert true)
(assert true)
(assert true)
(declare-fun tptp.k5_setfam_1 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k1_zfmisc_1 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (tptp.m1_subset_1 (tptp.k5_setfam_1 A B) _let_1))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k1_zfmisc_1 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (tptp.m1_subset_1 (tptp.k6_setfam_1 A B) _let_1))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_pre_topc A) (tptp.l1_struct_0 A))))
(assert true)
(assert true)
(assert (tptp.v1_xboole_0 tptp.o_0_0_xboole_0))
(assert true)
(assert (exists ((A $$unsorted)) (tptp.l1_pre_topc A)))
(assert (exists ((A $$unsorted)) (tptp.l1_struct_0 A)))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (tptp.m1_subset_1 B A))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v2_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_xboole_0 (tptp.u1_struct_0 A)))))
(assert (forall ((A $$unsorted)) (not (tptp.v1_xboole_0 (tptp.k1_zfmisc_1 A)))))
(assert (tptp.v1_xboole_0 tptp.k1_xboole_0))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_xboole_0 (tptp.u1_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_zfmisc_1 (tptp.u1_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v7_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_zfmisc_1 (tptp.u1_struct_0 A)))))
(declare-fun tptp.v1_finset_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (and (tptp.v8_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_finset_1 (tptp.u1_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v8_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_finset_1 (tptp.u1_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_xboole_0 B)))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B) (tptp.v1_subset_1 B A))))))
(assert (exists ((A $$unsorted)) (tptp.v1_xboole_0 A)))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v1_zfmisc_1 A))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_zfmisc_1 B)))))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_xboole_0 B)))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_xboole_0 B)) (not (tptp.v1_zfmisc_1 B)) (not (tptp.v1_subset_1 B A)))))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_xboole_0 A))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_zfmisc_1 A))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_subset_1 B A))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B) (tptp.v1_subset_1 B _let_1)))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_xboole_0 B)))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_subset_1 B A))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (not (tptp.v1_xboole_0 B)) (not (tptp.v1_zfmisc_1 B)) (not (tptp.v1_subset_1 B _let_1))))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 _let_1)) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B) (tptp.v1_subset_1 B _let_1)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_pre_topc A) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (tptp.v2_tops_1 B A))))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_zfmisc_1 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_zfmisc_1 B)))))))
(declare-fun tptp.k3_tarski ($$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.k1_zfmisc_1 A))) (= (tptp.k5_setfam_1 A B) (tptp.k3_tarski B))))))
(declare-fun tptp.k1_setfam_1 ($$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.k1_zfmisc_1 A))) (= (tptp.k6_setfam_1 A B) (tptp.k1_setfam_1 B))))))
(declare-fun tptp.r1_tarski ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.r1_tarski A A))))
(assert (not (tptp.v1_xboole_0 tptp.np__1)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (tptp.m1_subset_1 A B)))))
(assert (forall ((A $$unsorted)) (tptp.r1_tarski (tptp.k1_setfam_1 A) (tptp.k3_tarski A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 A B) (or (tptp.v1_xboole_0 B) (tptp.r2_hidden A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 B)) (tptp.r1_tarski A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C))) (tptp.m1_subset_1 A C))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C)) (tptp.v1_xboole_0 C)))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_pre_topc A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (=> (and (tptp.r1_tarski C B) (tptp.v1_tex_4 B A)) (tptp.v1_tex_4 C A)))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (= A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_pre_topc A)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xboole_0 B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A)))) (tptp.v1_tex_4 B A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.v1_xboole_0 A) (not (= A B)) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_pre_topc A)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.k1_zfmisc_1 _let_1))) (=> (tptp.v2_tex_4 B A) (or (= (tptp.k6_setfam_1 _let_1 B) tptp.k1_xboole_0) (tptp.v1_tex_4 (tptp.k5_setfam_1 _let_1 B) A)))))))))
(set-info :filename t9_tex_4)
(check-sat-assuming ( true ))
