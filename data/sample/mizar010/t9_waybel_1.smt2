(set-logic UF)
(declare-sort $$unsorted 0)
(declare-fun tptp.v2_struct_0 ($$unsorted) Bool)
(declare-fun tptp.v3_orders_2 ($$unsorted) Bool)
(declare-fun tptp.v4_orders_2 ($$unsorted) Bool)
(declare-fun tptp.v5_orders_2 ($$unsorted) Bool)
(declare-fun tptp.l1_orders_2 ($$unsorted) Bool)
(declare-fun tptp.v1_funct_1 ($$unsorted) Bool)
(declare-fun tptp.u1_struct_0 ($$unsorted) $$unsorted)
(declare-fun tptp.v1_funct_2 ($$unsorted $$unsorted $$unsorted) Bool)
(declare-fun tptp.k2_zfmisc_1 ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k1_zfmisc_1 ($$unsorted) $$unsorted)
(declare-fun tptp.m1_subset_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.k1_waybel_1 ($$unsorted $$unsorted $$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.v3_waybel_1 ($$unsorted $$unsorted $$unsorted) Bool)
(declare-fun tptp.v4_waybel_1 ($$unsorted $$unsorted $$unsorted) Bool)
(declare-fun tptp.v5_waybel_1 ($$unsorted $$unsorted $$unsorted) Bool)
(assert (not (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v3_orders_2 A) (tptp.v4_orders_2 A) (tptp.v5_orders_2 A) (tptp.l1_orders_2 A)) (forall ((B $$unsorted)) (=> (and (not (tptp.v2_struct_0 B)) (tptp.v3_orders_2 B) (tptp.v4_orders_2 B) (tptp.v5_orders_2 B) (tptp.l1_orders_2 B)) (forall ((C $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 B))) (let ((_let_2 (tptp.u1_struct_0 A))) (=> (and (tptp.v1_funct_1 C) (tptp.v1_funct_2 C _let_2 _let_1) (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (forall ((D $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (tptp.u1_struct_0 B))) (=> (and (tptp.v1_funct_1 D) (tptp.v1_funct_2 D _let_2 _let_1) (tptp.m1_subset_1 D (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (=> (tptp.v3_waybel_1 (tptp.k1_waybel_1 A B C D) A B) (and (tptp.v4_waybel_1 C A B) (tptp.v5_waybel_1 D A B)))))))))))))))))
(declare-fun tptp.r2_hidden ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (not (tptp.r2_hidden B A))))))
(declare-fun tptp.l1_struct_0 ($$unsorted) Bool)
(declare-fun tptp.v7_struct_0 ($$unsorted) Bool)
(declare-fun tptp.np__1 () $$unsorted)
(declare-fun tptp.v13_struct_0 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A)) (tptp.v13_struct_0 A tptp.np__1)))))
(declare-fun tptp.v1_lattice3 ($$unsorted) Bool)
(declare-fun tptp.v24_waybel_0 ($$unsorted) Bool)
(declare-fun tptp.v2_yellow_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_lattice3 A))) (let ((_let_2 (tptp.v3_orders_2 A))) (=> (tptp.l1_orders_2 A) (=> (and _let_2 _let_1 (tptp.v24_waybel_0 A)) (and _let_2 _let_1 (tptp.v2_yellow_0 A))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.np__1) (and (not (tptp.v2_struct_0 A)) (tptp.v7_struct_0 A))))))
(declare-fun tptp.v3_lattice3 ($$unsorted) Bool)
(declare-fun tptp.v25_waybel_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v3_orders_2 A))) (let ((_let_2 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_2 _let_1 (tptp.v3_lattice3 A)) (and _let_2 _let_1 (tptp.v24_waybel_0 A) (tptp.v25_waybel_0 A))))))))
(declare-fun tptp.v1_yellow_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v3_orders_2 A))) (let ((_let_2 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_2 _let_1 (tptp.v25_waybel_0 A)) (and _let_2 _let_1 (tptp.v1_yellow_0 A))))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v5_orders_2 A))) (let ((_let_2 (tptp.v4_orders_2 A))) (let ((_let_3 (tptp.v3_orders_2 A))) (let ((_let_4 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_4 _let_3 _let_2 _let_1 (tptp.v1_lattice3 A) (tptp.v1_yellow_0 A) (tptp.v24_waybel_0 A)) (and _let_4 _let_3 _let_2 _let_1 (tptp.v3_lattice3 A))))))))))
(declare-fun tptp.v2_lattice3 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v5_orders_2 A))) (let ((_let_2 (tptp.v3_orders_2 A))) (let ((_let_3 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_3 _let_2 _let_1 (tptp.v25_waybel_0 A)) (and _let_3 _let_2 _let_1 (tptp.v2_lattice3 A)))))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v2_yellow_0 A))) (let ((_let_2 (tptp.v5_orders_2 A))) (let ((_let_3 (tptp.v3_orders_2 A))) (let ((_let_4 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_4 _let_3 _let_2 _let_1 (tptp.v25_waybel_0 A)) (and _let_4 _let_3 _let_2 (tptp.v1_lattice3 A) _let_1)))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(declare-fun tptp.v1_xboole_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v1_funct_1 A))))
(declare-fun tptp.v1_partfun1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (=> (tptp.v1_partfun1 C A) (tptp.v1_funct_2 C A B)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (=> (tptp.v1_lattice3 A) (not (tptp.v2_struct_0 A))))))
(declare-fun tptp.v1_relat_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v1_relat_1 A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (tptp.v1_relat_1 C))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v7_struct_0 A)))))
(declare-fun tptp.v1_waybel_0 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v2_waybel_0 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (=> (tptp.v1_xboole_0 B) (and (tptp.v1_waybel_0 B A) (tptp.v2_waybel_0 B A))))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_1 (tptp.v3_lattice3 A)) (and _let_1 (tptp.v1_lattice3 A) (tptp.v2_lattice3 A)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v5_orders_2 A))) (let ((_let_2 (tptp.v4_orders_2 A))) (let ((_let_3 (tptp.v3_orders_2 A))) (let ((_let_4 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_4 _let_3 _let_2 _let_1 (tptp.v2_yellow_0 A) (tptp.v24_waybel_0 A) (tptp.v25_waybel_0 A)) (and _let_4 _let_3 _let_2 _let_1 (tptp.v3_lattice3 A))))))))))
(declare-fun tptp.v2_funct_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_funct_1 A))) (let ((_let_2 (tptp.v1_relat_1 A))) (=> (and (tptp.v1_xboole_0 A) _let_2 _let_1) (and _let_2 _let_1 (tptp.v2_funct_1 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (=> (tptp.v1_funct_2 C A B) (tptp.v1_partfun1 C A))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (=> (tptp.v2_lattice3 A) (not (tptp.v2_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_relat_1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_relat_1 B))))))
(declare-fun tptp.v4_relat_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v5_relat_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (and (tptp.v4_relat_1 C A) (tptp.v5_relat_1 C B)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v7_struct_0 A)) (not (tptp.v2_struct_0 A))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v3_orders_2 A))) (let ((_let_2 (tptp.v13_struct_0 A tptp.np__1))) (=> (tptp.l1_orders_2 A) (=> (and _let_2 _let_1) (and _let_2 _let_1 (tptp.v4_orders_2 A) (tptp.v5_orders_2 A) (tptp.v3_lattice3 A))))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_funct_1 B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (not (tptp.v1_xboole_0 B)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (=> (tptp.v1_funct_2 C A B) (tptp.v1_partfun1 C A))))))))
(declare-fun tptp.v3_relat_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_relat_1 A))) (=> (and (tptp.v1_xboole_0 A) _let_1) (and _let_1 (tptp.v3_relat_1 A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (tptp.v1_xboole_0 C)))))))
(declare-fun tptp.v3_yellow_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_1 (tptp.v3_lattice3 A)) (and _let_1 (tptp.v3_yellow_0 A)))))))
(declare-fun tptp.v3_funct_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_funct_1 A))) (let ((_let_2 (tptp.v1_relat_1 A))) (=> (and (tptp.v1_xboole_0 A) _let_2 _let_1) (and _let_2 _let_1 (tptp.v3_funct_1 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A A))) (=> (tptp.v1_funct_2 B A A) (tptp.v1_partfun1 B A))))))
(declare-fun tptp.v2_relat_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_relat_1 A))) (=> (and (tptp.v1_xboole_0 A) _let_1) (and _let_1 (tptp.v2_relat_1 A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 B A))) (tptp.v1_xboole_0 C)))))))
(declare-fun tptp.v8_struct_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v2_struct_0 A))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and _let_1 (tptp.v8_struct_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (=> (tptp.v3_yellow_0 A) (and (tptp.v1_yellow_0 A) (tptp.v2_yellow_0 A))))))
(declare-fun tptp.v1_zfmisc_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_funct_1 A))) (let ((_let_2 (tptp.v1_relat_1 A))) (=> (and _let_2 _let_1 (not (tptp.v3_funct_1 A))) (and (not (tptp.v1_zfmisc_1 A)) _let_2 _let_1))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_relat_1 B) (tptp.v4_relat_1 B A)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 B)) (tptp.v4_relat_1 C A)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (not (tptp.v8_struct_0 A)))) (=> (tptp.l1_struct_0 A) (=> _let_1 (and (not (tptp.v2_struct_0 A)) _let_1))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (=> (and (tptp.v1_yellow_0 A) (tptp.v2_yellow_0 A)) (tptp.v3_yellow_0 A)))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_funct_1 A))) (let ((_let_2 (tptp.v1_relat_1 A))) (=> (and (tptp.v1_zfmisc_1 A) _let_2 _let_1) (and _let_2 _let_1 (tptp.v3_funct_1 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_relat_1 B) (tptp.v5_relat_1 B A)) (forall ((C $$unsorted)) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 B)) (tptp.v5_relat_1 C A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v7_struct_0 A) (tptp.v8_struct_0 A)))))
(declare-fun tptp.v16_waybel_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v3_orders_2 A))) (let ((_let_2 (not (tptp.v2_struct_0 A)))) (=> (tptp.l1_orders_2 A) (=> (and _let_2 (tptp.v7_struct_0 A) _let_1) (and _let_2 _let_1 (tptp.v16_waybel_0 A))))))))
(declare-fun tptp.v4_funct_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v4_funct_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (let ((_let_1 (tptp.v4_relat_1 B A))) (let ((_let_2 (tptp.v1_relat_1 B))) (=> (and _let_2 _let_1) (and (tptp.v1_xboole_0 B) _let_2 _let_1))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (not (tptp.v8_struct_0 A)) (not (tptp.v7_struct_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v4_funct_1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (and (tptp.v1_relat_1 B) (tptp.v1_funct_1 B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B))) (forall ((C $$unsorted)) (let ((_let_1 (tptp.v1_funct_2 C A B))) (let ((_let_2 (tptp.v1_funct_1 C))) (=> (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (=> (and _let_2 _let_1) (and _let_2 (not (tptp.v1_xboole_0 C)) _let_1))))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (forall ((B $$unsorted)) (let ((_let_1 (tptp.v5_relat_1 B A))) (let ((_let_2 (tptp.v1_relat_1 B))) (=> (and _let_2 _let_1) (and (tptp.v1_xboole_0 B) _let_2 _let_1))))))))
(declare-fun tptp.k1_xboole_0 () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v2_struct_0 A) (tptp.v13_struct_0 A tptp.k1_xboole_0)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v4_funct_1 A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v4_funct_1 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_struct_0 A) (=> (tptp.v13_struct_0 A tptp.k1_xboole_0) (tptp.v2_struct_0 A)))))
(declare-fun tptp.k2_tarski ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k2_tarski A B) (tptp.k2_tarski B A)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_orders_2 A)) (forall ((B $$unsorted)) (=> (and (not (tptp.v2_struct_0 B)) (tptp.l1_orders_2 B)) (forall ((C $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 B))) (let ((_let_2 (tptp.u1_struct_0 A))) (=> (and (tptp.v1_funct_1 C) (tptp.v1_funct_2 C _let_2 _let_1) (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (= (tptp.v4_waybel_1 C A B) (exists ((D $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (tptp.u1_struct_0 B))) (and (tptp.v1_funct_1 D) (tptp.v1_funct_2 D _let_2 _let_1) (tptp.m1_subset_1 D (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1))) (tptp.v3_waybel_1 (tptp.k1_waybel_1 A B C D) A B)))))))))))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_orders_2 A)) (forall ((B $$unsorted)) (=> (and (not (tptp.v2_struct_0 B)) (tptp.l1_orders_2 B)) (forall ((C $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (tptp.u1_struct_0 B))) (=> (and (tptp.v1_funct_1 C) (tptp.v1_funct_2 C _let_2 _let_1) (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (= (tptp.v5_waybel_1 C A B) (exists ((D $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 B))) (let ((_let_2 (tptp.u1_struct_0 A))) (and (tptp.v1_funct_1 D) (tptp.v1_funct_2 D _let_2 _let_1) (tptp.m1_subset_1 D (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1))) (tptp.v3_waybel_1 (tptp.k1_waybel_1 A B D C) A B)))))))))))))))
(declare-fun tptp.o_0_0_xboole_0 () $$unsorted)
(assert (= tptp.k1_xboole_0 tptp.o_0_0_xboole_0))
(declare-fun tptp.k1_tarski ($$unsorted) $$unsorted)
(declare-fun tptp.k4_tarski ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.k4_tarski A B) (tptp.k2_tarski (tptp.k2_tarski A B) (tptp.k1_tarski A))))))
(assert true)
(declare-fun tptp.m1_waybel_1 ($$unsorted $$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (forall ((D $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (tptp.u1_struct_0 B))) (=> (and (tptp.l1_orders_2 A) (tptp.l1_orders_2 B) (tptp.v1_funct_1 C) (tptp.v1_funct_2 C _let_1 _let_2) (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_1 _let_2))) (tptp.v1_funct_1 D) (tptp.v1_funct_2 D _let_2 _let_1) (tptp.m1_subset_1 D (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (tptp.m1_waybel_1 (tptp.k1_waybel_1 A B C D) A B)))))))))
(assert true)
(assert true)
(assert true)
(assert true)
(assert true)
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (tptp.l1_struct_0 A))))
(assert true)
(assert true)
(assert true)
(assert (tptp.v1_xboole_0 tptp.o_0_0_xboole_0))
(assert true)
(assert (exists ((A $$unsorted)) (tptp.l1_orders_2 A)))
(assert (exists ((A $$unsorted)) (tptp.l1_struct_0 A)))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (tptp.m1_subset_1 B A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.l1_orders_2 A) (tptp.l1_orders_2 B)) (exists ((C $$unsorted)) (tptp.m1_waybel_1 C A B))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A)) (tptp.v4_funct_1 (tptp.k1_tarski A)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A) (tptp.v1_relat_1 B) (tptp.v1_funct_1 B)) (tptp.v4_funct_1 (tptp.k2_tarski A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.v1_funct_1 (tptp.k1_tarski (tptp.k4_tarski A B))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v2_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_xboole_0 (tptp.u1_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_xboole_0 (tptp.u1_struct_0 A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.v1_relat_1 (tptp.k1_tarski (tptp.k4_tarski A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.v1_relat_1 (tptp.k2_zfmisc_1 A B)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_zfmisc_1 (tptp.u1_struct_0 A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (forall ((D $$unsorted)) (tptp.v1_relat_1 (tptp.k2_tarski (tptp.k4_tarski A B) (tptp.k4_tarski C D))))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v7_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_zfmisc_1 (tptp.u1_struct_0 A)))))
(declare-fun tptp.v1_finset_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (and (tptp.v8_struct_0 A) (tptp.l1_struct_0 A)) (tptp.v1_finset_1 (tptp.u1_struct_0 A)))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v8_struct_0 A)) (tptp.l1_struct_0 A)) (not (tptp.v1_finset_1 (tptp.u1_struct_0 A))))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (exists ((C $$unsorted)) (and (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (tptp.v1_relat_1 C) (tptp.v4_relat_1 C A) (tptp.v5_relat_1 C B) (tptp.v1_funct_1 C) (tptp.v1_funct_2 C A B))))))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v1_relat_1 A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (exists ((C $$unsorted)) (and (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 A B))) (tptp.v1_xboole_0 C) (tptp.v1_relat_1 C) (tptp.v4_relat_1 C A) (tptp.v5_relat_1 C B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.l1_orders_2 A) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (tptp.v1_waybel_0 B A) (tptp.v2_waybel_0 B A))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_xboole_0 B)) (tptp.v1_zfmisc_1 B))))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v7_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_zfmisc_1 B)))))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A) (tptp.v2_funct_1 A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_relat_1 A) (tptp.v2_relat_1 A))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.v3_orders_2 A) (tptp.l1_orders_2 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_xboole_0 B)) (tptp.v1_finset_1 B) (tptp.v1_waybel_0 B A) (tptp.v2_waybel_0 B A))))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_relat_1 A) (tptp.v2_relat_1 A) (tptp.v1_funct_1 A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (exists ((C $$unsorted)) (and (tptp.v1_relat_1 C) (tptp.v4_relat_1 C A) (tptp.v5_relat_1 C B))))))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v1_relat_1 A) (tptp.v2_relat_1 A) (tptp.v1_funct_1 A))))
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v2_struct_0 A)) (tptp.l1_struct_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 (tptp.u1_struct_0 A))) (not (tptp.v1_xboole_0 B)))))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_relat_1 A) (tptp.v1_funct_1 A) (not (tptp.v3_funct_1 A)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (exists ((C $$unsorted)) (and (tptp.v1_relat_1 C) (tptp.v4_relat_1 C A) (tptp.v5_relat_1 C B) (tptp.v1_funct_1 C))))))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v4_funct_1 A))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (and (tptp.v1_relat_1 B) (tptp.v2_relat_1 B) (tptp.v4_relat_1 B A) (tptp.v1_funct_1 B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (forall ((D $$unsorted)) (let ((_let_1 (tptp.u1_struct_0 A))) (let ((_let_2 (tptp.u1_struct_0 B))) (=> (and (tptp.l1_orders_2 A) (tptp.l1_orders_2 B) (tptp.v1_funct_1 C) (tptp.v1_funct_2 C _let_1 _let_2) (tptp.m1_subset_1 C (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_1 _let_2))) (tptp.v1_funct_1 D) (tptp.v1_funct_2 D _let_2 _let_1) (tptp.m1_subset_1 D (tptp.k1_zfmisc_1 (tptp.k2_zfmisc_1 _let_2 _let_1)))) (= (tptp.k1_waybel_1 A B C D) (tptp.k4_tarski C D))))))))))
(declare-fun tptp.r1_tarski ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.r1_tarski A A))))
(assert (not (tptp.v1_xboole_0 tptp.np__1)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (tptp.m1_subset_1 A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 A B) (or (tptp.v1_xboole_0 B) (tptp.r2_hidden A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 B)) (tptp.r1_tarski A B)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C))) (tptp.m1_subset_1 A C))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C)) (tptp.v1_xboole_0 C)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (= A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.v1_xboole_0 A) (not (= A B)) (tptp.v1_xboole_0 B))))))
(set-info :filename t9_waybel_1)
(check-sat-assuming ( true ))
