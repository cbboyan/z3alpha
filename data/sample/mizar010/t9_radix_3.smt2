(set-logic UF)
(declare-sort $$unsorted 0)
(declare-fun tptp.v7_ordinal1 ($$unsorted) Bool)
(declare-fun tptp.k2_radix_3 ($$unsorted) $$unsorted)
(declare-fun tptp.k4_numbers () $$unsorted)
(declare-fun tptp.r1_tarski ($$unsorted $$unsorted) Bool)
(assert (not (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.r1_tarski (tptp.k2_radix_3 A) tptp.k4_numbers)))))
(declare-fun tptp.r2_hidden ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (not (tptp.r2_hidden B A))))))
(declare-fun tptp.v1_xboole_0 ($$unsorted) Bool)
(declare-fun tptp.v1_zfmisc_1 ($$unsorted) Bool)
(declare-fun tptp.np__1 () $$unsorted)
(declare-fun tptp.v3_card_1 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (tptp.v1_zfmisc_1 A)) (tptp.v3_card_1 A tptp.np__1))))
(declare-fun tptp.k1_zfmisc_1 ($$unsorted) $$unsorted)
(declare-fun tptp.m1_subset_1 ($$unsorted $$unsorted) Bool)
(declare-fun tptp.v5_membered ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 tptp.k4_numbers)) (tptp.v5_membered A))))
(declare-fun tptp.k5_numbers () $$unsorted)
(declare-fun tptp.v6_membered ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 tptp.k5_numbers)) (tptp.v6_membered A))))
(declare-fun tptp.v1_membered ($$unsorted) Bool)
(declare-fun tptp.v1_xcmplx_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v1_xcmplx_0 B))))))
(declare-fun tptp.v2_membered ($$unsorted) Bool)
(declare-fun tptp.v1_xxreal_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v2_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v1_xxreal_0 B))))))
(declare-fun tptp.v3_membered ($$unsorted) Bool)
(declare-fun tptp.v1_xreal_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v3_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v1_xreal_0 B))))))
(declare-fun tptp.v4_membered ($$unsorted) Bool)
(declare-fun tptp.v1_rat_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v4_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v1_rat_1 B))))))
(declare-fun tptp.v1_int_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v5_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v1_int_1 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v6_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B A) (tptp.v7_ordinal1 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v6_membered A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v1_membered B))))))
(declare-fun tptp.v1_card_1 ($$unsorted) Bool)
(declare-fun tptp.v3_ordinal1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_card_1 A) (tptp.v3_ordinal1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k4_numbers) (tptp.v1_int_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v6_membered A) (tptp.v5_membered A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v7_ordinal1 A))) (=> _let_1 (and (tptp.v3_ordinal1 A) _let_1)))))
(declare-fun tptp.k1_numbers () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k1_numbers) (tptp.v1_xreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v2_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v2_membered B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v3_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v3_membered B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v4_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v4_membered B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v5_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v5_membered B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v6_membered A) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v6_membered B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k5_numbers) (tptp.v6_membered A))))
(declare-fun tptp.v7_membered ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v7_membered A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v1_card_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v1_int_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v5_membered A) (tptp.v4_membered A))))
(declare-fun tptp.v3_xxreal_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k5_numbers) (not (tptp.v3_xxreal_0 A)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v1_xreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v1_xxreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v1_card_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_int_1 A) (tptp.v1_xreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v4_membered A) (tptp.v3_membered A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v7_ordinal1 A))) (=> _let_1 (and _let_1 (not (tptp.v3_xxreal_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (tptp.v1_xcmplx_0 A))))
(declare-fun tptp.v2_xxreal_0 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and _let_1 (tptp.v2_xxreal_0 A)) (and (not (tptp.v1_xboole_0 A)) _let_1 (not (tptp.v3_xxreal_0 A)))))))
(declare-fun tptp.k4_ordinal1 () $$unsorted)
(declare-fun tptp.v1_finset_1 ($$unsorted) Bool)
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A tptp.k4_ordinal1) (tptp.v1_finset_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v3_membered A) (tptp.v2_membered A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (tptp.v1_xxreal_0 A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and (not (tptp.v1_xboole_0 A)) _let_1 (not (tptp.v3_xxreal_0 A))) (and _let_1 (tptp.v2_xxreal_0 A))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.v1_finset_1 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v3_membered A) (tptp.v1_membered A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and _let_1 (tptp.v3_xxreal_0 A)) (and (not (tptp.v1_xboole_0 A)) _let_1 (not (tptp.v2_xxreal_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (and (tptp.v3_ordinal1 A) (tptp.v1_finset_1 A)) (tptp.v7_ordinal1 A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and (not (tptp.v1_xboole_0 A)) _let_1 (not (tptp.v2_xxreal_0 A))) (and _let_1 (tptp.v3_xxreal_0 A))))))
(declare-fun tptp.k1_xboole_0 () $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.v3_card_1 A tptp.k1_xboole_0) (tptp.v1_xboole_0 A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and (tptp.v1_xboole_0 A) _let_1) (and _let_1 (not (tptp.v2_xxreal_0 A)) (not (tptp.v3_xxreal_0 A)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (tptp.v3_card_1 A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (=> (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 tptp.k1_numbers)) (tptp.v3_membered A))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.v1_xxreal_0 A))) (=> (and _let_1 (not (tptp.v2_xxreal_0 A)) (not (tptp.v3_xxreal_0 A))) (and (tptp.v1_xboole_0 A) _let_1)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v3_card_1 A tptp.np__1) (and (not (tptp.v1_xboole_0 A)) (tptp.v1_zfmisc_1 A)))))
(declare-fun tptp.r1_xxreal_0 ($$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xxreal_0 A) (tptp.v1_xxreal_0 B)) (or (tptp.r1_xxreal_0 A B) (tptp.r1_xxreal_0 B A))))))
(declare-fun tptp.np__2 () $$unsorted)
(declare-fun tptp.k3_power ($$unsorted $$unsorted) $$unsorted)
(declare-fun tptp.k1_radix_1 ($$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (= (tptp.k1_radix_1 A) (tptp.k3_power tptp.np__2 A)))))
(assert (forall ((A $$unsorted)) (= (tptp.v1_int_1 A) (tptp.r2_hidden A tptp.k4_numbers))))
(declare-fun tptp.a_1_1_radix_3 ($$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (= (tptp.k2_radix_3 A) (tptp.a_1_1_radix_3 A)))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.r1_tarski A B) (forall ((C $$unsorted)) (=> (tptp.r2_hidden C A) (tptp.r2_hidden C B)))))))
(assert true)
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (tptp.m1_subset_1 (tptp.k1_radix_1 A) tptp.k5_numbers))))
(assert true)
(assert true)
(assert true)
(assert true)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xreal_0 A) (tptp.v1_xreal_0 B)) (tptp.v1_xreal_0 (tptp.k3_power A B))))))
(assert true)
(assert true)
(declare-fun tptp.k4_xcmplx_0 ($$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xcmplx_0 A) (tptp.v1_xcmplx_0 (tptp.k4_xcmplx_0 A)))))
(assert (tptp.m1_subset_1 tptp.k5_numbers (tptp.k1_zfmisc_1 tptp.k1_numbers)))
(assert true)
(declare-fun tptp.k7_nat_d ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v7_ordinal1 A) (tptp.v7_ordinal1 B)) (tptp.m1_subset_1 (tptp.k7_nat_d A B) tptp.k5_numbers)))))
(assert true)
(declare-fun tptp.m2_subset_1 ($$unsorted $$unsorted $$unsorted) Bool)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (=> (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C A)))))))
(assert (forall ((A $$unsorted)) (exists ((B $$unsorted)) (tptp.m1_subset_1 B A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (exists ((C $$unsorted)) (tptp.m2_subset_1 C A B))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.k4_xcmplx_0 A))) (=> (and (not (tptp.v2_xxreal_0 A)) (tptp.v1_xreal_0 A)) (and (tptp.v1_xcmplx_0 _let_1) (not (tptp.v3_xxreal_0 _let_1)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.k4_xcmplx_0 A))) (=> (and (not (tptp.v3_xxreal_0 A)) (tptp.v1_xreal_0 A)) (and (tptp.v1_xcmplx_0 _let_1) (not (tptp.v2_xxreal_0 _let_1)))))))
(declare-fun tptp.k6_xcmplx_0 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v3_xxreal_0 A)) (tptp.v1_xreal_0 A) (not (tptp.v2_xxreal_0 B)) (tptp.v1_xreal_0 B)) (not (tptp.v3_xxreal_0 (tptp.k6_xcmplx_0 A B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v3_xxreal_0 A)) (tptp.v1_xreal_0 A) (not (tptp.v2_xxreal_0 B)) (tptp.v1_xreal_0 B)) (not (tptp.v2_xxreal_0 (tptp.k6_xcmplx_0 B A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v2_xxreal_0 A) (tptp.v1_xreal_0 A) (not (tptp.v2_xxreal_0 B)) (tptp.v1_xreal_0 B)) (tptp.v2_xxreal_0 (tptp.k6_xcmplx_0 A B))))))
(assert (not (tptp.v1_xboole_0 tptp.k1_numbers)))
(assert (tptp.v1_xboole_0 tptp.k1_xboole_0))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v2_xxreal_0 A) (tptp.v1_xreal_0 A) (not (tptp.v2_xxreal_0 B)) (tptp.v1_xreal_0 B)) (tptp.v3_xxreal_0 (tptp.k6_xcmplx_0 B A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v3_xxreal_0 A) (tptp.v1_xreal_0 A) (not (tptp.v3_xxreal_0 B)) (tptp.v1_xreal_0 B)) (tptp.v3_xxreal_0 (tptp.k6_xcmplx_0 A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v3_xxreal_0 A) (tptp.v1_xreal_0 A) (not (tptp.v3_xxreal_0 B)) (tptp.v1_xreal_0 B)) (tptp.v2_xxreal_0 (tptp.k6_xcmplx_0 B A))))))
(declare-fun tptp.k1_xreal_0 ($$unsorted $$unsorted) $$unsorted)
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xreal_0 A) (tptp.v1_xreal_0 B)) (tptp.v1_xreal_0 (tptp.k1_xreal_0 A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (let ((_let_1 (tptp.k1_xreal_0 A B))) (=> (and (tptp.v1_xreal_0 A) (tptp.v1_xreal_0 B)) (and (not (tptp.v3_xxreal_0 _let_1)) (tptp.v1_xreal_0 _let_1)))))))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.k4_xcmplx_0 A))) (=> (tptp.v1_int_1 A) (and (tptp.v1_xcmplx_0 _let_1) (tptp.v1_int_1 _let_1))))))
(assert (tptp.v3_membered tptp.k1_numbers))
(assert (forall ((A $$unsorted)) (let ((_let_1 (tptp.k4_xcmplx_0 A))) (=> (tptp.v1_xreal_0 A) (and (tptp.v1_xcmplx_0 _let_1) (tptp.v1_xreal_0 _let_1))))))
(assert (tptp.v1_card_1 tptp.k4_ordinal1))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_int_1 A) (tptp.v1_int_1 B)) (tptp.v1_int_1 (tptp.k6_xcmplx_0 A B))))))
(assert (not (tptp.v1_xboole_0 tptp.k4_numbers)))
(assert (tptp.v7_membered tptp.k1_numbers))
(assert (tptp.v7_membered tptp.k4_numbers))
(assert (tptp.v7_membered tptp.k4_ordinal1))
(declare-fun tptp.v2_card_1 ($$unsorted) Bool)
(assert (tptp.v2_card_1 tptp.k4_ordinal1))
(assert (tptp.v5_membered tptp.k4_numbers))
(assert (tptp.v6_membered tptp.k4_ordinal1))
(assert (not (tptp.v1_finset_1 tptp.k4_numbers)))
(assert (not (tptp.v1_finset_1 tptp.k4_ordinal1)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xreal_0 A) (tptp.v1_xreal_0 B)) (tptp.v1_xreal_0 (tptp.k6_xcmplx_0 A B))))))
(assert (not (tptp.v1_finset_1 tptp.k1_numbers)))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_finset_1 A)) (not (tptp.v1_finset_1 (tptp.k1_zfmisc_1 A))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.v7_ordinal1 B) (= (tptp.r2_hidden A (tptp.a_1_1_radix_3 B)) (exists ((C $$unsorted)) (let ((_let_1 (tptp.k1_radix_1 (tptp.k7_nat_d B tptp.np__1)))) (and (tptp.m1_subset_1 C tptp.k4_numbers) (= A C) (tptp.r1_xxreal_0 (tptp.k6_xcmplx_0 (tptp.k4_xcmplx_0 _let_1) tptp.np__1) C) (tptp.r1_xxreal_0 C _let_1)))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xcmplx_0 A) (= (tptp.k4_xcmplx_0 (tptp.k4_xcmplx_0 A)) A))))
(assert (exists ((A $$unsorted)) (tptp.v1_card_1 A)))
(assert (exists ((A $$unsorted)) (and (tptp.m1_subset_1 A tptp.k1_numbers) (tptp.v1_xxreal_0 A) (tptp.v1_xcmplx_0 A) (tptp.v1_xreal_0 A) (tptp.v1_int_1 A))))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v6_membered A))))
(assert (exists ((A $$unsorted)) (tptp.v1_xboole_0 A)))
(assert (exists ((A $$unsorted)) (tptp.v1_xreal_0 A)))
(assert (exists ((A $$unsorted)) (tptp.v1_xxreal_0 A)))
(assert (exists ((A $$unsorted)) (tptp.v1_int_1 A)))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v6_membered A))))
(assert (exists ((A $$unsorted)) (and (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 tptp.k1_numbers)) (not (tptp.v1_xboole_0 A)) (tptp.v3_ordinal1 A))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_xboole_0 A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xcmplx_0 A) (tptp.v1_xxreal_0 A) (tptp.v2_xxreal_0 A) (tptp.v1_xreal_0 A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xxreal_0 A) (tptp.v2_xxreal_0 A))))
(assert (exists ((A $$unsorted)) (not (tptp.v1_finset_1 A))))
(assert (exists ((A $$unsorted)) (and (not (tptp.v1_xboole_0 A)) (tptp.v6_membered A) (tptp.v7_membered A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xcmplx_0 A) (tptp.v1_xxreal_0 A) (tptp.v3_xxreal_0 A) (tptp.v1_xreal_0 A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xxreal_0 A) (tptp.v3_xxreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_finset_1 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (not (tptp.v1_finset_1 B)))))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xboole_0 A) (tptp.v1_xcmplx_0 A) (tptp.v1_xxreal_0 A) (tptp.v1_xreal_0 A))))
(assert (exists ((A $$unsorted)) (and (tptp.v1_xboole_0 A) (tptp.v1_xxreal_0 A))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_card_1 A) (exists ((B $$unsorted)) (tptp.v3_card_1 B A)))))
(assert (forall ((A $$unsorted)) (=> (not (tptp.v1_xboole_0 A)) (exists ((B $$unsorted)) (and (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A)) (tptp.v3_card_1 B tptp.np__1))))))
(assert (= tptp.k5_numbers tptp.k4_ordinal1))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v7_ordinal1 A) (tptp.v7_ordinal1 B)) (= (tptp.k7_nat_d A B) (tptp.k1_xreal_0 A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (not (tptp.v1_xboole_0 A)) (not (tptp.v1_xboole_0 B)) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 A))) (forall ((C $$unsorted)) (= (tptp.m2_subset_1 C A B) (tptp.m1_subset_1 C B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (tptp.r1_tarski A A))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xxreal_0 A) (tptp.v1_xxreal_0 B)) (tptp.r1_xxreal_0 A A)))))
(assert (tptp.r1_xxreal_0 tptp.np__1 tptp.np__1))
(assert (tptp.r1_xxreal_0 tptp.np__1 tptp.np__2))
(assert (not (tptp.r1_xxreal_0 tptp.np__1 (tptp.k4_xcmplx_0 tptp.np__1))))
(assert (not (tptp.r1_xxreal_0 tptp.np__1 (tptp.k4_xcmplx_0 tptp.np__2))))
(assert (not (tptp.r1_xxreal_0 tptp.np__2 tptp.np__1)))
(assert (tptp.r1_xxreal_0 tptp.np__2 tptp.np__2))
(assert (not (tptp.r1_xxreal_0 tptp.np__2 (tptp.k4_xcmplx_0 tptp.np__1))))
(assert (not (tptp.r1_xxreal_0 tptp.np__2 (tptp.k4_xcmplx_0 tptp.np__2))))
(assert (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__1) tptp.np__1))
(assert (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__1) tptp.np__2))
(assert (let ((_let_1 (tptp.k4_xcmplx_0 tptp.np__1))) (tptp.r1_xxreal_0 _let_1 _let_1)))
(assert (not (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__1) (tptp.k4_xcmplx_0 tptp.np__2))))
(assert (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__2) tptp.np__1))
(assert (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__2) tptp.np__2))
(assert (tptp.r1_xxreal_0 (tptp.k4_xcmplx_0 tptp.np__2) (tptp.k4_xcmplx_0 tptp.np__1)))
(assert (let ((_let_1 (tptp.k4_xcmplx_0 tptp.np__2))) (tptp.r1_xxreal_0 _let_1 _let_1)))
(assert (= (tptp.k6_xcmplx_0 tptp.np__1 tptp.np__2) (tptp.k4_xcmplx_0 tptp.np__1)))
(assert (= (tptp.k6_xcmplx_0 tptp.np__1 (tptp.k4_xcmplx_0 tptp.np__1)) tptp.np__2))
(assert (= (tptp.k6_xcmplx_0 tptp.np__2 tptp.np__1) tptp.np__1))
(assert (= (tptp.k6_xcmplx_0 (tptp.k4_xcmplx_0 tptp.np__1) tptp.np__1) (tptp.k4_xcmplx_0 tptp.np__2)))
(assert (= (tptp.k6_xcmplx_0 (tptp.k4_xcmplx_0 tptp.np__1) (tptp.k4_xcmplx_0 tptp.np__2)) tptp.np__1))
(assert (let ((_let_1 (tptp.k4_xcmplx_0 tptp.np__1))) (= (tptp.k6_xcmplx_0 (tptp.k4_xcmplx_0 tptp.np__2) _let_1) _let_1)))
(assert (let ((_let_1 (tptp.k4_xcmplx_0 tptp.np__1))) (= _let_1 _let_1)))
(assert (let ((_let_1 (tptp.k4_xcmplx_0 tptp.np__2))) (= _let_1 _let_1)))
(assert (= (tptp.k4_xcmplx_0 (tptp.k4_xcmplx_0 tptp.np__1)) tptp.np__1))
(assert (= (tptp.k4_xcmplx_0 (tptp.k4_xcmplx_0 tptp.np__2)) tptp.np__2))
(assert (not (tptp.v1_xboole_0 tptp.np__1)))
(assert (and (tptp.v2_xxreal_0 tptp.np__1) (tptp.m2_subset_1 tptp.np__1 tptp.k1_numbers tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__1 tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__1 tptp.k1_numbers)))
(assert (not (tptp.v1_xboole_0 tptp.np__2)))
(assert (and (tptp.v2_xxreal_0 tptp.np__2) (tptp.m2_subset_1 tptp.np__2 tptp.k1_numbers tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__2 tptp.k5_numbers) (tptp.m1_subset_1 tptp.np__2 tptp.k1_numbers)))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (and (tptp.v1_xcmplx_0 A) (tptp.v1_xcmplx_0 B)) (= (tptp.k6_xcmplx_0 (tptp.k4_xcmplx_0 A) (tptp.k4_xcmplx_0 B)) (tptp.k6_xcmplx_0 B A))))))
(assert (tptp.m1_subset_1 tptp.k1_xboole_0 tptp.k4_ordinal1))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (=> (and (tptp.r1_xxreal_0 A B) (tptp.v2_xxreal_0 A)) (tptp.v2_xxreal_0 B)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.r2_hidden A B) (tptp.m1_subset_1 A B)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (=> (and (tptp.r1_xxreal_0 A B) (tptp.v3_xxreal_0 B)) (tptp.v3_xxreal_0 A)))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (=> (tptp.m1_subset_1 A B) (or (tptp.v1_xboole_0 B) (tptp.r2_hidden A B))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden C B) (forall ((D $$unsorted)) (not (and (tptp.r2_hidden D B) (tptp.r2_hidden D C))))))))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (not (and (tptp.r1_xxreal_0 A B) (not (tptp.v3_xxreal_0 A)) (tptp.v3_xxreal_0 B))))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (= (tptp.m1_subset_1 A (tptp.k1_zfmisc_1 B)) (tptp.r1_tarski A B)))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (not (and (tptp.r1_xxreal_0 A B) (not (tptp.v2_xxreal_0 B)) (tptp.v2_xxreal_0 A))))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (=> (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C))) (tptp.m1_subset_1 A C))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (=> (tptp.r1_xxreal_0 A B) (or (tptp.v1_xboole_0 B) (tptp.v3_xxreal_0 A) (tptp.v2_xxreal_0 B))))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (forall ((C $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.m1_subset_1 B (tptp.k1_zfmisc_1 C)) (tptp.v1_xboole_0 C)))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xboole_0 A) (= A tptp.k1_xboole_0))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (=> (tptp.r1_xxreal_0 A B) (or (tptp.v1_xboole_0 A) (tptp.v2_xxreal_0 B) (tptp.v3_xxreal_0 A))))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.r2_hidden A B) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (not (and (not (tptp.r1_xxreal_0 A B)) (not (tptp.v2_xxreal_0 A)) (not (tptp.v3_xxreal_0 B)))))))))
(assert (forall ((A $$unsorted)) (forall ((B $$unsorted)) (not (and (tptp.v1_xboole_0 A) (not (= A B)) (tptp.v1_xboole_0 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v7_ordinal1 A) (forall ((B $$unsorted)) (=> (tptp.r2_hidden B (tptp.k2_radix_3 A)) (tptp.v1_int_1 B))))))
(assert (forall ((A $$unsorted)) (=> (tptp.v1_xreal_0 A) (forall ((B $$unsorted)) (=> (tptp.v1_xreal_0 B) (not (and (not (tptp.r1_xxreal_0 A B)) (not (tptp.v3_xxreal_0 B)) (not (tptp.v2_xxreal_0 A)))))))))
(set-info :filename t9_radix_3)
(check-sat-assuming ( true ))
